dist = df_final[,15:16]
for (i in as.numeric(dim(metro)[1])){
test <- distHaversine(df_final[,15:16], metro[i,2:3])/1000
dist[,paste0("station_", i)] <- test
dist <- cbind(dist, dist)
}
View(dist)
dist = df_final[,15:16]
dist = list()
for (i in as.numeric(dim(metro)[1])){
test <- distHaversine(df_final[,15:16], metro[i,2:3])/1000
test$i <- i
dist[[i]] <- test
}
View(dist)
dist = list()
for (i in as.numeric(dim(metro)[1])){
test <- distHaversine(df_final[,15:16], metro[i,2:3])/1000
dist[[i]] <- test
}
View(dist)
dist[[1]]
dist[[33]]
dist = list()
for (i in as.numeric(dim(metro)[1])){
test <- distHaversine(df_final[,15:16], metro[i,2:3])/1000
dist[[i]] <- test
}
big_data = do.call(cbind, dist)
View(big_data)
as.numeric(dim(metro)[1])
dist = list()
i=1
for (i in as.numeric(dim(metro)[1])){
test <- distHaversine(df_final[,15:16], metro[i,2:3])/1000
dist[[i]] <- test
i=i+1
}
View(dist)
dist = list()
for (i in 1:as.numeric(dim(metro)[1])){
test <- distHaversine(df_final[,15:16], metro[i,2:3])/1000
dist[[i]] <- test
}
View(dist)
dist_all = do.call(cbind, dist)
View(dist_all)
View(dist_all)
apply(dist_all, 1, FUN=min)
dist_all$min <- apply(dist_all, 1, FUN=min)
apply(dist_all, 1, FUN=min)
dist_all = do.call(cbind, dist)
apply(dist_all, 1, FUN=min)
as.data.frame(apply(dist_all, 1, FUN=min))
dist_all$min <- as.data.frame(apply(dist_all, 1, FUN=min))
View(dist_all)
dist_all = do.call(cbind, dist)
apply(dist_all, 1, FUN=min)
dist_all <- as.data.frame(dist_all)
apply(dist_all, 1, FUN=min)
dist_all$min <- apply(dist_all, 1, FUN=min)
View(dist_all)
metro[1,2:3]
metro[i,1]
dist = list()
for (i in 1:as.numeric(dim(metro)[1])){
test <- distHaversine(df_final[,15:16], metro[i,2:3])/1000
dist[[metro[i,1]]] <- test
}
View(dist)
dist_all = do.call(cbind, dist)
dist_all <- as.data.frame(dist_all)
colnames(dist_all)[min.col(dist_all,ties.method="first")]
apply(dist_all, 1, FUN=min)
dist_all$min <- apply(dist_all, 1, FUN=min)
dist_all$Distance_to_subway_in_km <- apply(dist_all, 1, FUN=min)
cbind(df_final, dist_all$Distance_to_subway_in_km)
df_final <- cbind(df_final, dist_all$Distance_to_subway_in_km)
colnames(df_final)[26]
colnames(df_final)[26] <- "Distance_to_subway_in_km"
library("xlsx")
library(xlsx)
install.packages("xlsx")
library(xlsx)
write.xlsx(df_final, file = "df_final_v3.xlsx")
knitr::opts_chunk$set(echo = TRUE)
df_final <- readxl::read_excel("df_final_v3.xlsx")
View(df_final)
df_final$...1 <- NULL
colnames(df_final)
variables <- matrix(c(
"District", "The district",
"Total price", "Total price of the property in PLN",
"Days from initial announcement", "Days from initial announcement",
"Czynsz", "Rent",
"Forma własności", "Form of ownership",
"Piętro", "Floor",
"Rodzaj zabudowy", "Type of construction",
"Stan wykończenia", "Finishing condition",
"Liczba pięter", "Number of floors in the building",
"Rynek", "Property market",
"Powierzchnia", "Are of the property",
"Liczba pokoi", "Number of rooms",
"Rok budowy", "Year built ",
"Ogrzewanie","Heating type",
"Lat","Latitude of the property",
"Lon","Longitude of the property",
"Distance_to_PKIN_in_km","Distance to the center (indicated by the PKiN building) in km",
"Time_to_PKIN_in_minutes","Time to the center (indicated by the PKiN building) in minutes", # stopami czy jak?
"Distance_to_subway_in_km","Distance to the nearest subway in km",
"Price_per_sqm","Price per square metre",
"Population_density","Population density", # of what?
"Vistula_side(1_for_west_0_for_east)","Which side of the Vistula the property is located (1=west, 0=east)",
"Life_quality","Life quality within a district",
"Family_friendliness","Family friendliness within a district",
"Single_people_friendliness","Single people friendliness within a district",
"Senior_people_friendliness","Senior people friendliness within a district"
),
ncol=2,byrow=TRUE)
colnames(variables) <- c("Variable Name", "Variable description")
library(knitr)
kable(variables)
summary(df_final)
apply(df_final, 2, is.na)
sapply(df_final, function(x) sum(is.na(x)))
sapply(df_final, function(x) sum(is.na(x))) %>% as_tibble()
sapply(df_final, function(x) sum(is.na(x))) %>% as_data_frame()
sapply(df_final, function(x) sum(is.na(x)))
sapply(df_final, function(x) sum(is.na(x))/dim(df_final)[1])
sapply(df_final, function(x) sum(is.na(x))/dim(df_final)[1]*100)
colMeans(is.na(df_final))
lm(Czynsz ~ District + Total_price + Powierzchnia + Price_per_sqm + `Liczba pokoi` + Distance_to_PKIN_in_km + Distance_to_subway_in_km)
lm(Czynsz ~ District + Total_price + Powierzchnia + Price_per_sqm + `Liczba pokoi` + Distance_to_PKIN_in_km + Distance_to_subway_in_km, data = df_final)
summary(df_final$Days_from_initial_announcement)
df_status(df_final$Days_from_initial_announcement)
head(df_final$Days_from_initial_announcement)
df_final$Days_from_initial_announcement[1:10]
View(df_final)
nums <- sapply(df_final, is.numeric)
nums <- sapply(df_final, is.numeric)
df_final[,nums]
nums <- sapply(df_final, is.numeric)
head(df_final[,nums])
nums <- sapply(df_final, is.numeric)
df_final_nums <- df_final[,nums]
head(df_final_nums)
oth <- which(!nums)
df_final_oth <- df_final[,oth]
head(df_final_oth)
cols.f <- names(df_final_oth)
cols.f <- names(df_final_oth)
for (i in cols.f) {
df_final[,i] <- as.factor(df_final[,i])
}
View(df_final)
cols.f <- names(df_final_oth)
for (i in cols.f) {
df_final[,i] <- as.factor(as.character(df_final[,i]))
}
df_final <- readxl::read_excel("df_final_v3.xlsx")
df_final$...1 <- NULL
df_final <- readxl::read_excel("df_final_v3.xlsx")
df_final$...1 <- NULL
df_final <- readxl::read_excel("df_final_v3.xlsx")
df_final$...1 <- NULL
df_final <- readxl::read_excel("df_final_v3.xlsx")
df_final$...1 <- NULL
variables <- matrix(c(
"District", "The district",
"Total price", "Total price of the property in PLN",
"Days from initial announcement", "Days from initial announcement",
"Czynsz", "Rent",
"Forma własności", "Form of ownership",
"Piętro", "Floor",
"Rodzaj zabudowy", "Type of construction",
"Stan wykończenia", "Finishing condition",
"Liczba pięter", "Number of floors in the building",
"Rynek", "Property market",
"Powierzchnia", "Are of the property",
"Liczba pokoi", "Number of rooms",
"Rok budowy", "Year built ",
"Ogrzewanie","Heating type",
"Lat","Latitude of the property",
"Lon","Longitude of the property",
"Distance_to_PKIN_in_km","Distance to the center (indicated by the PKiN building) in km",
"Time_to_PKIN_in_minutes","Time to the center (indicated by the PKiN building) in minutes", # stopami czy jak?
"Distance_to_subway_in_km","Distance to the nearest subway in km",
"Price_per_sqm","Price per square metre",
"Population_density","Population density", # of what?
"Vistula_side(1_for_west_0_for_east)","Which side of the Vistula the property is located (1=West, 0=East)",
"Life_quality","Life quality within a district",
"Family_friendliness","Family friendliness within a district",
"Single_people_friendliness","Single people friendliness within a district",
"Senior_people_friendliness","Senior people friendliness within a district"
),
ncol=2,byrow=TRUE)
colnames(variables) <- c("Variable Name", "Variable description")
library(knitr)
kable(variables)
cols.f <- names(df_final_oth)
nums <- sapply(df_final, is.numeric)
df_final_nums <- df_final[,nums]
head(df_final_nums)
oth <- which(!nums)
df_final_oth <- df_final[,oth]
head(df_final_oth)
cols.f <- names(df_final_oth)
for (i in cols.f) {
df_final[,i] <- as.factor(as.character(df_final[,i]))
}
View(df_final)
head(df_final)
df_final <- readxl::read_excel("df_final_v3.xlsx")
df_final$...1 <- NULL
View(df_final)
variables <- matrix(c(
"District", "The district",
"Total price", "Total price of the property in PLN",
"Days from initial announcement", "Days from initial announcement",
"Czynsz", "Rent",
"Forma własności", "Form of ownership",
"Piętro", "Floor",
"Rodzaj zabudowy", "Type of construction",
"Stan wykończenia", "Finishing condition",
"Liczba pięter", "Number of floors in the building",
"Rynek", "Property market",
"Powierzchnia", "Are of the property",
"Liczba pokoi", "Number of rooms",
"Rok budowy", "Year built ",
"Ogrzewanie","Heating type",
"Lat","Latitude of the property",
"Lon","Longitude of the property",
"Distance_to_PKIN_in_km","Distance to the center (indicated by the PKiN building) in km",
"Time_to_PKIN_in_minutes","Time to the center (indicated by the PKiN building) in minutes", # stopami czy jak?
"Distance_to_subway_in_km","Distance to the nearest subway in km",
"Price_per_sqm","Price per square metre",
"Population_density","Population density", # of what?
"Vistula_side(1_for_west_0_for_east)","Which side of the Vistula the property is located (1=West, 0=East)",
"Life_quality","Life quality within a district",
"Family_friendliness","Family friendliness within a district",
"Single_people_friendliness","Single people friendliness within a district",
"Senior_people_friendliness","Senior people friendliness within a district"
),
ncol=2,byrow=TRUE)
colnames(variables) <- c("Variable Name", "Variable description")
library(knitr)
kable(variables)
nums <- sapply(df_final, is.numeric)
df_final_nums <- df_final[,nums]
head(df_final_nums)
oth <- which(!nums)
df_final_oth <- df_final[,oth]
head(df_final_oth)
cols.f <- names(df_final_oth)
for (i in cols.f) {
df_final[,i] <- as.factor(df_final[,i])
}
View(df_final)
df_final <- readxl::read_excel("df_final_v3.xlsx")
df_final$...1 <- NULL
as.factor(df_final$District)
df_final$District <- as.factor(df_final$District)
View(df_final)
cols.f
names(df_final_oth
names(df_final_oth)
names(df_final_oth)
cols.f <- names(df_final_oth)
for (i in cols.f) {
df_final[,i] <- as.factor(df_final[,i])
}
df_final <- readxl::read_excel("df_final_v3.xlsx")
df_final$...1 <- NULL
cols.f <- names(df_final_oth)
for (i in cols.f) {
df_final[,i] <- as.factor(df_final[,i])
}
cols.f
df_final$District <- as.factor(df_final$District)
df_final$Days_from_initial_announcement <- as.factor(df_final$Days_from_initial_announcement)
df_final$`Forma własności` <- as.factor(df_final$`Forma własności`)
df_final$Piętro <- as.factor(df_final$Piętro)
df_final$`Rodzaj zabudowy` <- as.factor(df_final$`Rodzaj zabudowy`)
df_final$`Stan wykończenia` <- as.factor(df_final$`Stan wykończenia`)
df_final$Rynek <- as.factor(df_final$Rynek)
df_final$`Liczba pokoi` <- as.factor(df_final$`Liczba pokoi`)
df_final$Ogrzewanie <- as.factor(df_final$Ogrzewanie)
View(df_final)
df_final <- readxl::read_excel("df_final_v3.xlsx")
df_final$...1 <- NULL
df_final$District <- as.factor(df_final$District)
df_final$Days_from_initial_announcement <- as.factor(df_final$Days_from_initial_announcement)
df_final$`Forma własności` <- as.factor(df_final$`Forma własności`)
df_final$Piętro <- as.factor(df_final$Piętro)
df_final$`Rodzaj zabudowy` <- as.factor(df_final$`Rodzaj zabudowy`)
df_final$`Stan wykończenia` <- as.factor(df_final$`Stan wykończenia`)
df_final$Rynek <- as.factor(df_final$Rynek)
df_final$`Liczba pokoi` <- as.factor(df_final$`Liczba pokoi`)
df_final$Ogrzewanie <- as.factor(df_final$Ogrzewanie)
View(df_final)
colnames(df_final_oth)
levels(df_final$District)
levels(df_final$Days_from_initial_announcement)
levels(df_final$`Forma własności`)
remotes::install_github("mbojan/mapoland")
library(rgdal)
my_spdf <- readOGR(
dsn=dzielnice_Warszawy.shp,
layer="dzielnice_Warszawy-0.3",
verbose=FALSE
)
library(rgdal)
my_spdf <- readOGR(
dsn="shapefile/dzielnice_Warszawy.shp",
layer="dzielnice_Warszawy-0.3",
verbose=FALSE
)
library(rgdal)
my_spdf <- readOGR(
dsn="shapefile/dzielnice_Warszawy.shp",
layer="dzielnice_Warszawy",
verbose=FALSE
)
head(my_spdf@data)
library(broom)
spdf_fortified <- tidy(my_spdf, region = "NAME")
spdf_fortified <- tidy(my_spdf, region = "nazwa_dzie")
my_spdf
View(my_spdf)
?tidy
plot(my_spdf, col="#f2f2f2", bg="skyblue", lwd=0.25, border=0 )
plot(my_spdf, col="#f2f2f2", bg="skyblue", lwd=0.25, border=0.3)
tidy(my_spdf, region = "NAME")
ggplot() +
geom_polygon(data = my_spdf, aes( x = long, y = lat, group = group)) +
theme_minimal()
# Plot it
library(ggplot2)
ggplot() +
geom_polygon(data = my_spdf, aes( x = long, y = lat, group = group)) +
theme_minimal()
# 'fortify' the data to get a dataframe format required by ggplot2
library(broom)
spdf_fortified <- tidy(my_spdf, region = "NAME")
library(ggplot2)
ggplot() +
geom_polygon(data = my_spdf, aes( x = long, y = lat, group = group))
my_spdf
packages_vector = c("knitr", "readxl", "kableExtra", "ggplot2", "rpart", "rattle", "mice", "dplyr","forcats")
package.check <- lapply(packages_vector, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
}
})
library(knitr)
library(readxl)
library(kableExtra)
library(ggplot2)
library(rpart)
library(rattle)
library(mice)
library(dplyr)
library(forcats)
knitr::opts_chunk$set(echo = TRUE)
options(width = 120)
df_final <- readxl::read_excel("df_final_v4.xlsx")
df_final$...1 <- NULL
# supplementary code
colnames(df_final) <- c("District", "Total_price", "Days_from_initial_announcement", "Rent", "Ownership", "Floor", "Construction_type", "Finishing_condition", "No_of_floors", "Property_market", "Area", "No_of_rooms", "Year_built", "Heating", "Lat", "Lon", "Distance_to_PKIN_in_km", "Time_to_PKIN_in_minutes", "Price_per_sqm", "Population_density", "Vistula_side", "Life_quality", "Family_friendliness", "Single_people_friendliness", "Senior_people_friendliness", "Distance_to_subway_in_km", "Distance_to_airport_in_km")
variables <- matrix(c(
"District", "The district",
"Total_price", "Total price of the property in PLN",
"Days_from_initial_announcement", "Days from initial announcement appeared on the website",
"Rent", "Rent",
"Ownership", "Form of ownership",
"Floor", "Floor",
"Construction_type", "Type of construction",
"Finishing_condition", "Finishing condition",
"No_of_floors", "Number of floors in the building",
"Property_market", "Property market (if primary or secondary)",
"Area", "Living area of the property in squared metres",
"No_of_rooms", "Number of rooms",
"Year_built", "Construction completion year",
"Heating","Heating type",
"Lat","Latitude of the property",
"Lon","Longitude of the property",
"Distance_to_PKIN_in_km","Distance to the center (indicated by the PKiN building) in km",
"Time_to_PKIN_in_minutes","Time to the center (indicated by the PKiN building) in minutes", # stopami?
"Distance_to_subway_in_km","Distance to the nearest subway in km",
"Distance_to_airport_in_km", "Distance to Chopin Airport in km",
"Price_per_sqm","Price per square metre",
"Population_density","Population density of district",
"Vistula_side(1_for_west_0_for_east)","Which side of the Vistula the property is located (1=West, 0=East)",
"Life_quality","Life quality within a district",
"Family_friendliness","Family friendliness within a district",
"Single_people_friendliness","Single people friendliness within a district",
"Senior_people_friendliness","Senior people friendliness within a district"
),
ncol=2,byrow=TRUE)
colnames(variables) <- c("Variable Name", "Variable description")
kable(variables)
nums <- sapply(df_final, is.numeric)
df_final_nums <- df_final[,nums]
kable(head(df_final_nums)) %>%
kable_styling(bootstrap_options = c("hover", "responsive")) %>%
scroll_box(width = "100%", height = "90%")
oth <- which(!nums)
df_final_oth <- df_final[,oth]
kable(head(df_final_oth)) %>%
kable_styling(bootstrap_options = c("hover", "responsive")) %>%
scroll_box(width = "100%", height = "90%")
df_final$District <- as.factor(df_final$District)
df_final$Ownership <- as.factor(df_final$Ownership)
df_final$Construction_type <- as.factor(df_final$Construction_type)
df_final$Finishing_condition <- as.factor(df_final$Finishing_condition)
df_final$Property_market <- as.factor(df_final$Property_market)
df_final$Heating <- as.factor(df_final$Heating)
df_final$Vistula_side <- as.factor(df_final$Vistula_side)
ggplot(df_final, aes(x = No_of_floors, y = Price_per_sqm)) +
geom_point(color="#FDE733") +
theme_minimal()
formula <- Price_per_sqm ~ No_of_floors
tree1 <- rpart(formula, data = df_final, control=rpart.control(minsplit=10, cp=0.002, maxdepth = 3))
fancyRpartPlot(tree1, palettes = "Spectral")
df_final$No_of_floors_binned <-
ifelse(df_final$No_of_floors < 2, "<= 2",
ifelse(df_final$No_of_floors > 2 & df_final$No_of_floors <= 4, "> 2 & <= 4",
ifelse(df_final$No_of_floors > 4 & df_final$No_of_floors <= 28, "> 4 & <= 28",
ifelse(df_final$No_of_floors > 28, "> 28", 0))))
df_final$No_of_floors_binned <- as.factor(df_final$No_of_floors_binned)
df_final$Year_built <- ifelse(df_final$Year_built==19885, 1985, df_final$Year_built)
df_final$Year_built <- ifelse(df_final$Year_built==20112, 2012, df_final$Year_built)
df_final$Year_built <- ifelse(df_final$Year_built==20110, 2010, df_final$Year_built)
df_final$Building_age <- 2020 - df_final$Year_built
ggplot(df_final, aes(x = Building_age, y = Price_per_sqm)) +
geom_point(color="#FDE733") +
theme_minimal()
formula <- Price_per_sqm ~ Building_age
tree2 <- rpart(formula, data = df_final, control=rpart.control(minsplit=10, cp=0.002, maxdepth = 3))
fancyRpartPlot(tree2, palettes = "Spectral")
df_final$Building_age_binned <-
ifelse(df_final$Building_age <= 0, "<= 0",
ifelse(df_final$Building_age > 0 & df_final$Building_age <= 12, "> 0 & <= 12",
ifelse(df_final$Building_age > 12 & df_final$Building_age <= 64, "> 12 & <= 64",
ifelse(df_final$Building_age > 64 & df_final$Building_age <= 105, "> 64 & <= 105",
ifelse(df_final$Building_age > 105, "> 105", 0)))))
df_final$Building_age_binned <- as.factor(df_final$Building_age_binned)
df_final$Days_from_initial_announcement <- ifelse(df_final$Days_from_initial_announcement=="Less than a day", 0, df_final$Days_from_initial_announcement)
df_final$Days_from_initial_announcement <- as.integer(df_final$Days_from_initial_announcement)
ggplot(df_final, aes(x = Days_from_initial_announcement, y = Price_per_sqm)) +
geom_point(color="#FDE733") +
theme_minimal()
df_final$Days_from_initial_announcement_binned <-
ifelse(df_final$Days_from_initial_announcement == 0, "Less than a day",
ifelse(df_final$Days_from_initial_announcement > 0 & df_final$Days_from_initial_announcement <= 7, "Week or less than a week",
ifelse(df_final$Days_from_initial_announcement > 7 & df_final$Days_from_initial_announcement <= 30, "Month or less than a month",
ifelse(df_final$Days_from_initial_announcement > 30 & df_final$Days_from_initial_announcement <= 365, "Year or less than a year",
ifelse(df_final$Days_from_initial_announcement > 365, "Over a year", 0)))))
df_final$Days_from_initial_announcement_binned <- as.factor(df_final$Days_from_initial_announcement_binned)
df_final$Floor <- as.factor(df_final$Floor)
levels(df_final$Floor)
df_final %>%
group_by(Floor) %>%
count %>%
ggplot(aes(x = Floor, y = n)) +
geom_bar(stat = "identity", fill = "orange")
df_final$Floor_binned <- df_final$Floor
levels(df_final$Floor_binned) <- c("> 10","=> 1 & <= 5","> 5 & <= 10","=> 1 & <= 5","=> 1 & <= 5","=> 1 & <= 5","=> 1 & <= 5","> 5 & <= 10","> 5 & <= 10","> 5 & <= 10","> 5 & <= 10","parter","poddasze","suterena")
levels(df_final$Floor_binned)
df_final$No_of_rooms <- as.factor(df_final$No_of_rooms)
levels(df_final$No_of_rooms)
df_final %>%
group_by(No_of_rooms) %>%
count %>%
ggplot(aes(x = No_of_rooms, y = n)) +
geom_bar(stat='identity', fill = "orange")
df_final$No_of_rooms_binned <- df_final$No_of_rooms
levels(df_final$No_of_rooms_binned) <- c("1","2","3 or more","3 or more","3 or more","3 or more","3 or more","3 or more","3 or more","3 or more")
levels(df_final$No_of_rooms_binned)
missings <- as.data.frame(colMeans(is.na(df_final)))
missings["Variabe"] <- row.names(missings)
colnames(missings) <- c("Missings_ratio", "Variable")
missings %>% filter(Missings_ratio > 0.001) %>% select(Variable, Missings_ratio)
f_names <- c("Ownership", "Floor", "Construction_type", "Finishing_condition", "Heating", "No_of_floors_binned", "Building_age_binned", "Floor_binned")
df_final[,f_names] <- lapply(df_final[,f_names], function(x) fct_explicit_na(x, na_level = "Missing")) %>% as.data.frame
formula <- make.formulas(df_final[,c("Rent","Area","No_of_rooms_binned","Heating")])
imp <- mice(df_final[,c("Rent","Area","No_of_rooms_binned","Heating")],
m=5,
method="pmm",
formulas = formula,
seed=1234)
rent_imp <- rowMeans(imp[["imp"]][["Rent"]])
names(rent_imp) <- NULL
df_final$id <- 1:dim(df_final)[1]
miss_rent <- df_final %>% filter(is.na(Rent))
nonmiss_rent <- df_final %>% filter(!is.na(Rent))
nonmiss_rent$rent_imp <- NA
df_final_1 <- cbind(miss_rent, rent_imp)
df_final_2 <- rbind(nonmiss_rent, df_final_1)
df_final_2$Rent_imp <- ifelse(is.na(df_final_2$Rent), rent_imp, df_final_2$Rent)
df_final_2 <- df_final_2 %>% dplyr::select(id, Rent_imp)
df_final <- left_join(df_final, df_final_2, by="id") %>% dplyr::select(-id)
ols_0 <- lm(Price_per_sqm ~ Distance_to_PKIN_in_km + Distance_to_subway_in_km + Distance_to_airport_in_km,
data=df_final)
step.model_0 <- step(ols_0, direction = "both", trace = FALSE)
summary(step.model_0)
ols_1 <- lm(Price_per_sqm ~
District + Rent_imp + Property_market + Area + No_of_rooms + Vistula_side + Distance_to_PKIN_in_km +
Distance_to_subway_in_km + Distance_to_airport_in_km,
data=df_final)
step.model_1 <- step(ols_1, direction = "both", trace = FALSE)
summary(step.model_1)
